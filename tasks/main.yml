# tasks file for network-interfaces
---
- name: create directory
  file:
    path: "{{ network_interfaces_interface_path }}"
    state: directory
  when: network_interfaces_interfaces

- name: all interfaces
  template:
    src: etc/network/interfaces.j2
    dest: "{{ network_interfaces_all_interfaces_path }}"
  notify: restart
  when: network_interfaces_interfaces

- name: list network interfaces
  command: "find {{ network_interfaces_interface_path }} -type f"
  changed_when: no
  when: network_interfaces_interfaces
  register: network_interfaces_existing_files

- name: configurations
  template:
    src: etc/network/interfaces.d/device.j2
    dest: "{{ network_interfaces_interface_path }}/device-{{ item.device }}-{{ item.family | default('inet') }}"
  with_items: network_interfaces_interfaces
  register: network_interfaces_configuration_result

- name: configured files
  set_fact:
    network_interfaces_configured_files: >
      [{% for item in network_interfaces_configuration_result.results | default([]) -%}
        u"{{ item.dest | default(item.path) }}"
        {{ '' if loop.last else ',' }}
      {%- endfor %}]

- name: remove configurations
  file:
    dest: "{{ item }}"
    state: absent
  when: >
    network_interfaces_manage_devices
    and (item not in network_interfaces_configured_files)
  with_items: network_interfaces_existing_files.stdout_lines | default([])

- name: restart devices
  service:
    name: "{{ network_interfaces_service }}"
    state: restarted
    arguments: "INTERFACE={{ item.0 }}"
  when: >
    (0 != item.1 | selectattr('changed') | list | length)
    and ((0 != item.1 | selectattr('item.auto', 'undefined') | list | length)
      or (true in item.1 | selectattr('item.auto') | list)
    )
  with_items: network_interfaces_configuration_result.results | default([]) | groupby('item.device')
